'use strict';

module.exports = function (grunt) {
    require('load-grunt-tasks')(grunt);

    grunt.initConfig({
        clean: {
            dist: {
                files: [{
                    dot: true,
                    src: [
                        'public/{{ assets_path }}/styles/*',
                        'public/{{ assets_path }}/scripts/*'
                    ]
                }]
            }
        },
        coffee: {
            options: {
                bare: true
            },
            dist: {
                options: {
                    sourceMap: false
                },
                files: [{
                    expand: true,
                    cwd: '{{ assets_path }}/scripts',
                    src: '**/*.coffee',
                    dest: 'public/{{ assets_path }}/scripts',
                    ext: '.js'
                }]
            },
            test: {
                files: [{
                    expand: true,
                    cwd: '{{ assets_path }}/test/spec',
                    src: '**/*.coffee',
                    dest: 'public/{{ assets_path }}/test/spec',
                    ext: '.js'
                }]
            }
        },
        jshint: {
            options: {
                jshintrc: '.jshintrc'
            },
            all: [
                'Gruntfile.js',
                '{{ assets_path }}/scripts/**/*.js',
                '!{{ assets_path }}/vendor/*',
                '{{ assets_path }}/test/spec/**/*.js'
            ]
        },
        compass: {
            options: {
                sassDir: '{{ assets_path }}/styles',
                cssDir: 'public/{{ assets_path }}/styles',
                generatedImagesDir: 'public/{{ assets_path }}/images/out',
                imagesDir: 'public/{{ assets_path }}/images',
                javascriptsDir: 'public/{{ assets_path }}/scripts',
                fontsDir: 'public/{{ assets_path }}/styles/fonts',
                httpImagesPath: '/{{ assets_path }}/images',
                httpGeneratedImagesPath: '/{{ assets_path }}/images/out',
                httpFontsPath: '/{{ assets_path }}/styles/fonts',
                outputStyle: 'compressed',
                noLineComments: true,
                debugInfo: false,
                relativeAssets: false,
                assetCacheBuster: false
            },
            dist: {
                options: {
                    outputStyle: 'compressed',
                    noLineComments: true
                }
            },
            server: {
                options: {
                    debugInfo: true
                }
            }
        },
        autoprefixer: {
            options: {
                browsers: [ 'last 1 version' ]
            },
            dist: {
                files: [{
                    expand: true,
                    cwd: '{{ assets_path }}/styles/',
                    src: '**/*.css',
                    dest: 'public/{{ assets_path }}/styles/'
                }]
            }
        },
        php: {
            options: {
                router: 'server.php',
                hostname: 'localhost',
                port: 9999
            },
            test: {
                options: {
                    keepalive: true,
                    open: true
                }
            },
            watch: {}
        },
        watch: {
            coffee: {
                files: [ '{{ assets_path }}/scripts/**/*.coffee' ],
                tasks: [ 'coffee:dist' ]
            },
            coffeeTest: {
                files: [ '{{ assets_path }}/test/spec/**/*.coffee' ],
                tasks: [ 'coffee:test' ]
            },
            compass: {
                files: [ '{{ assets_path }}/styles/**/*.{scss,sass}' ],
                tasks: [ 'autoprefixer', 'compass:server' ]
            },
            styles: {
                files: [ '{{ assets_path }}/styles/**/*.css' ],
                tasks: [ 'copy:dist', 'autoprefixer' ]
            },
            scripts: {
                files: [ '{{ assets_path }}/scripts/**/*.js' ],
                tasks: [ 'jshint', 'copy:dist' ]
            },
            images: {
                files: [ '{{ assets_path }}/images/**/*.{png,jpg,jpeg,gif}' ],
                tasks: [ 'copy:dist' ]
            },
            livereload: {
                options: {
                    livereload: true
                },
                files: [ // Don't replace "{,*/}" with "/**/" in livereload
                    'app/views/{,*/}*.php',
                    'public/{{ assets_path }}/{,*/}/',
                    'public/{{ assets_path }}/{,*/}/*.*'
                ]
            }
        },
        uglify: {
            dist: {
                files: [{
                    src: 'public/{{ assets_path }}/scripts/**/*.js',
                    dest: 'public/{{ assets_path }}/scripts/',
                    expand: true,
                    flatten: true,
                    ext: '.js'
                }]
            }
        },
        copy: {
            dist: {
                expand: true,
                dot: true,
                cwd: '{{ assets_path }}/',
                src: [
                    'styles/**/*.css',
                    'scripts/**/*.js',
                    'images/**/*.*'
                ],
                dest: 'public/assets'
            }
        }
    });

    grunt.registerTask('server', [
        'jshint',
        'build',
        'php:watch',
        'watch'
    ]);

    grunt.registerTask('build', [
        'clean:dist',
        'autoprefixer',
        'compass',
        'copy:dist'
    ]);

    grunt.registerTask('default', [
        'jshint',
        'build',
        'uglify'
    ]);
};
